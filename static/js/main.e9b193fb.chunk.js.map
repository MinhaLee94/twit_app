{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetForm.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","GlobalStyles.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","LoginForm","styled","form","LoginInput","input","SubmitBtn","AuthError","span","AuthSwitch","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","AuthContainer","div","BtnContainer","SocialLoginBtn","button","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","TweetList","TweetIcons","TweetForm","TweetInput","TweetSubmitBtn","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","tweetTextRef","doc","id","tweetImageRef","ref","attachedFileUrl","deleteDoc","deleteObject","toggleEditing","updateDoc","autoFocus","src","alt","faTrash","faPencilAlt","TweetInputForm","TweetInputContainer","TweetInputArrow","TweetInputLabel","label","TweetAttachment","AttachmentRemoveBtn","userObj","tweet","setTweet","attachedFile","setAttachedFile","attachedFileRef","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","serverTimestamp","creatorId","maxLength","for","faPlus","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","q","query","orderBy","onSnapshot","snapshot","tweetArray","docs","map","data","className","marginTop","Navbar","ul","TwitIcon","Link","ProfileIcon","Navigation","to","faUser","displayName","ProfileForm","ProfileNameInput","ProfileUpdateBtn","LogOutBtn","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","getMyTweets","where","getDocs","forEach","updateProfile","currentUser","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","display","justifyContent","exact","path","GlobalStyles","createGlobalStyle","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9b193fb.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();","import React, { useState } from \"react\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { authService } from \"fbase\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoginForm = styled.form`\r\n\twidth: 100%;\r\n\tmax-width: 320px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n\tmax-width: 320px;\r\n\twidth: 100%;\r\n\tpadding: 10px;\r\n\tborder-radius: 30px;\r\n\tbackground-color: rgba(255, 255, 255, 1);\r\n\tmargin-bottom: 10px;\r\n\tfont-size: 12px;\r\n\tcolor: black;\r\n`;\r\n\r\nconst SubmitBtn = styled(LoginInput)`\r\n\ttext-align: center;\r\n\tbackground: #04aaff;\r\n\tcolor: white;\r\n\tmargin-top: 10;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst AuthError = styled.span`\r\n\tcolor: tomato;\r\n\ttext-align: center;\r\n\tfont-weight: 500;\r\n\tfont-size: 12px;\r\n`;\r\n\r\nconst AuthSwitch = styled.span`\r\n\tcolor: #04aaff;\r\n\tcursor: pointer;\r\n\tmargin-top: 10px;\r\n\tmargin-bottom: 50px;\r\n\tdisplay: block;\r\n\tfont-size: 12px;\r\n\ttext-decoration: underline;\r\n`;\r\n\r\n\r\nconst AuthForm = () => {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [newAccount, setNewAccount] = useState(true);\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst onChange = (event) => {\r\n\t\tconst { target: { name, value }} = event;\r\n\t\tif(name === \"email\") {\r\n\t\t\tsetEmail(value);\r\n\t\t} else if (name === \"password\") {\r\n\t\t\tsetPassword(value);\r\n\t\t}\r\n\t};\r\n\tconst onSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tif(newAccount) {\r\n\t\t\t\tawait createUserWithEmailAndPassword(authService, email, password);\r\n\t\t\t} else {\r\n\t\t\t\tawait signInWithEmailAndPassword(authService, email, password);\r\n\t\t\t}\r\n\t\t} catch(error) {\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t};\r\n\tconst toggleAccount = () => setNewAccount((prev) => !prev);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<LoginForm onSubmit={onSubmit}>\r\n\t\t\t\t<LoginInput name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n\t\t\t\t<LoginInput name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n\t\t\t\t<SubmitBtn type=\"submit\" value={newAccount ? \"Create Account\" : \"Log in\"} />\r\n\t\t\t\t{error && <AuthError>{error}</AuthError>}\r\n\t\t\t</LoginForm>\r\n\t\t\t<AuthSwitch onClick={toggleAccount}>{newAccount ? \"Sign in\" : \"Create Account\"}</AuthSwitch>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nAuthForm.propTypes = {\r\n\temail: PropTypes.string.isRequired,\r\n\tpassword: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default AuthForm;","import { GithubAuthProvider, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AuthContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 100vh;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\twidth: 100%;\r\n\tmax-width: 320px;\r\n`;\r\n\r\nconst SocialLoginBtn = styled.button`\r\n\tcursor: pointer;\r\n\tborder-radius: 20px;\r\n\tborder: none;\r\n\tpadding: 10px 0px;\r\n\tfont-size: 12px;\r\n\ttext-align: center;\r\n\twidth: 150px;\r\n\tbackground: white;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst Auth = () => {\r\n\tconst onSocialClick = async(event) => {\r\n\t\tconst { target: { name }} = event;\r\n\t\tlet provider;\r\n\t\ttry {\r\n\t\t\tif (name === \"google\") {\r\n\t\t\t\tprovider = new GoogleAuthProvider();\r\n\t\t\t} else if (name === \"github\") {\r\n\t\t\t\tprovider = new GithubAuthProvider();\r\n\t\t\t}\r\n\t\t\tawait signInWithPopup(authService, provider);\r\n\t\t} catch(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AuthContainer>\r\n\t\t\t<FontAwesomeIcon\r\n\t\t\t\ticon={faTwitter}\r\n\t\t\t\tcolor={\"#04AAFF\"}\r\n\t\t\t\tsize=\"3x\"\r\n\t\t\t\tstyle={{ marginBottom: 30 }}\r\n\t\t\t/>\r\n\t\t\t<AuthForm />\r\n\t\t\t<BtnContainer>\r\n\t\t\t\t<SocialLoginBtn onClick={onSocialClick} name=\"google\">\r\n\t\t\t\t\tContinue with Google <FontAwesomeIcon icon={faGoogle} />\r\n\t\t\t\t</SocialLoginBtn>\r\n\t\t\t\t<SocialLoginBtn onClick={onSocialClick} name=\"github\">\r\n\t\t\t\t\tContinue with Github <FontAwesomeIcon icon={faGithub} />\r\n\t\t\t\t</SocialLoginBtn>\r\n\t\t\t</BtnContainer>\r\n\t\t</AuthContainer>\r\n\t);\r\n};\r\n\r\nexport default Auth;","import { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TweetList = styled.div`\r\n\tmargin-bottom: 20px;\r\n\tbackground-color: white;\r\n\twidth: 100%;\r\n\tmax-width: 320px;\r\n\tpadding: 20px;\r\n\tborder-radius: 10px;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor: rgba(0, 0, 0, 0.8);\r\n\r\n\t& > h4 {\r\n\t\tfont-size: 14px;\r\n\t}\r\n\r\n\t& > img {\r\n\t\tright: -10px;\r\n\t\ttop: 20px;\r\n\t\tposition: absolute;\r\n\t\tborder-radius: 50%;\r\n\t\twidth: 50px;\r\n\t\theight: 50px;\r\n\t\tmargin-top: 10px;\r\n\t}\r\n`;\r\n\r\nconst TweetIcons = styled.div`\r\n\tposition: absolute;\r\n\tright: 10px;\r\n\ttop: 10px;\r\n\r\n\t& > span {\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t& > span::first-child {\r\n\t\tmargin-right: 10px;\r\n\t}\r\n`;\r\n\r\nconst TweetForm = styled.form`\r\n\twidth: 100%;\r\n\tmax-width: 320px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nconst TweetInput = styled.input`\r\n\twidth: 100%;\r\n\tpadding: 10px 20px;\r\n\tborder-radius: 20px;\r\n\tborder: 1px solid black;\r\n\ttext-align: center;\r\n\tbackground-color: white;\r\n\tcolor: black;\r\n`;\r\n\r\nconst TweetSubmitBtn = styled.input`\r\n\tcursor: pointer;\r\n\twidth: 100%;\r\n\tpadding: 7px 20px;\r\n\ttext-align: center;\r\n\tcolor: white;\r\n\tborder-radius: 20px;\r\n\tbackground-color: #04aaff;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst cancelBtn = styled(TweetSubmitBtn)`\r\n\tcursor: pointer;\r\n\tbackground-color: tomato;\r\n`;\r\n\r\nconst Tweet = ({ tweetObj, isOwner}) => {\r\n\tconst [editing, setEditing] = useState(false);\r\n\tconst [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\tconst onDeleteClick = async () => {\r\n\t\tconst ok = window.confirm(\"Are you sure you want to delete this tweet?\");\r\n\t\tif (ok) {\r\n\t\t\tconst tweetTextRef = doc(dbService, \"tweets\", `${tweetObj.id}`);\r\n\t\t\tconst tweetImageRef = ref(storageService, tweetObj.attachedFileUrl);\r\n\t\t\tawait deleteDoc(tweetTextRef);\r\n\t\t\tawait deleteObject(tweetImageRef);\r\n\t\t}\r\n\t}\r\n\tconst toggleEditing = () => {\r\n\t\tsetEditing(prev => !prev);\r\n\t}\r\n\tconst onSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst tweetTextRef = doc(dbService, \"tweets\", `${tweetObj.id}`);\r\n\t\tawait updateDoc(tweetTextRef, {\r\n\t\t\ttext: newTweet,\r\n\t\t});\r\n\t\tsetEditing(false);\r\n\t}\r\n\tconst onChange = (event) => {\r\n\t\tconst { target: { value }} = event;\r\n\t\tsetNewTweet(value);\r\n\t}\r\n\treturn (\r\n\t\t<TweetList>\r\n\t\t\t{editing ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<TweetForm onSubmit={onSubmit}>\r\n\t\t\t\t\t\t<TweetInput type=\"text\" placeholder=\"Edit your tweet\" value={newTweet} required onChange={onChange} autoFocus />\r\n\t\t\t\t\t\t<TweetSubmitBtn type=\"submit\" value=\"Update\" />\r\n\t\t\t\t\t</TweetForm>\r\n\t\t\t\t\t<cancelBtn onClick={toggleEditing} >\r\n\t\t\t\t\t\tCancel\r\n          \t\t\t</cancelBtn>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>{tweetObj.text}</h4>\r\n\t\t\t\t\t{tweetObj.attachedFileUrl && <img src={tweetObj.attachedFileUrl} alt=\"\"/>}\r\n\t\t\t\t\t{isOwner && (\r\n\t\t\t\t\t\t<TweetIcons>\r\n\t\t\t\t\t\t\t<span onClick={onDeleteClick}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash} />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span onClick={toggleEditing}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPencilAlt} />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</TweetIcons>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</TweetList>\r\n\t);\r\n};\r\n\r\nexport default Tweet;","import React, { useState } from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TweetInputForm = styled.form`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n`;\r\n\r\nconst TweetInputContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tflex-wrap: wrap;\r\n\tposition: relative;\r\n\tmargin-bottom: 20px;\r\n\twidth: 100%;\r\n`;\r\n\r\nconst TweetInput = styled.input`\r\n\tflex-grow: 1;\r\n\theight: 40px;\r\n\tpadding: 0px 20px;\r\n\tcolor: white;\r\n\tborder: 1px solid #04aaff;\r\n\tborder-radius: 20px;\r\n\tfont-weight: 500;\r\n\tfont-size: 12px;\r\n`;\r\n\r\nconst TweetInputArrow = styled.input`\r\n\tposition: absolute;\r\n\tright: 0;\r\n\tbackground-color: #04aaff;\r\n\theight: 40px;\r\n\twidth: 40px;\r\n\tpadding: 10px 0px;\r\n\ttext-align: center;\r\n\tborder-radius: 20px;\r\n\tcolor: white;\r\n`;\r\n\r\nconst TweetInputLabel = styled.label`\r\n\tcolor: #04aaff;\r\n  \tcursor: pointer;\r\n`;\r\n\r\nconst TweetAttachment = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\t& > img {\r\n\t\theight: 80px;\r\n\t\twidth: 80px;\r\n\t\tborder-radius: 40px;\r\n\t}\r\n`;\r\n\r\nconst AttachmentRemoveBtn = styled.div`\r\n\tcolor: #04aaff;\r\n\tcursor: pointer;\r\n\ttext-align: center;\r\n\t& > span {\r\n\t\tmargin-right: 10px;\r\n  \t\tfont-size: 12px;\r\n\t}\r\n`;\r\n\r\nconst TweetForm = ({ userObj,  }) => {\r\n\tconst [tweet, setTweet] = useState(\"\");\r\n\tconst [attachedFile, setAttachedFile] = useState(\"\");\r\n\tconst onSubmit = async (event) => {\r\n\t\tif (tweet === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tevent.preventDefault();\r\n\t\tlet attachedFileUrl = \"\";\r\n\t\tif(attachedFile !== \"\"){\r\n\t\t\tconst attachedFileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n\t\t\tconst response = await uploadString(attachedFileRef, attachedFile, \"data_url\");\r\n\t\t\tattachedFileUrl = await getDownloadURL(response.ref);\r\n\t\t}\r\n\t\tawait addDoc(collection(dbService, \"tweets\"), {\r\n\t\t\ttext: tweet,\r\n\t\t\tcreatedAt: serverTimestamp(),\r\n\t\t\tcreatorId: userObj.uid,\r\n\t\t\tattachedFileUrl\r\n\t\t});\r\n\t\tsetTweet(\"\");\r\n\t\tsetAttachedFile(\"\");\r\n\t};\r\n\tconst onChange = (event) => {\r\n\t\tconst { target: { value }} = event;\r\n\t\tsetTweet(value);\r\n\t}\r\n\tconst onFileChange = (event) => {\r\n\t\tconst { target:{ files }} = event;\r\n\t\tconst file = files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = (finishedEvent) => {\r\n\t\t\tconst { currentTarget: { result }} = finishedEvent;\r\n\t\t\tsetAttachedFile(result);\r\n\t\t};\r\n\t\treader.readAsDataURL(file);\r\n\t}\r\n\tconst onClearAttachedFile = () => setAttachedFile(\"\");\r\n\treturn (\r\n\t\t<TweetInputForm onSubmit={onSubmit}>\r\n\t\t\t<TweetInputContainer>\r\n\t\t\t\t<TweetInput\r\n\t\t\t\t\tvalue={tweet}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"What's on your mind?\"\r\n\t\t\t\t\tmaxLength={120}\r\n\t\t\t\t/>\r\n        \t\t<TweetInputArrow type=\"submit\" value=\"&rarr;\" />\r\n     \t\t</TweetInputContainer> \r\n      \t\t<TweetInputLabel for=\"attach-file\">\r\n        \t\t<span>Add photos</span>\r\n        \t\t<FontAwesomeIcon icon={faPlus} />\r\n      \t\t</TweetInputLabel>\r\n\t\t\t<input\r\n\t\t\t\tid=\"attach-file\"\r\n\t\t\t\ttype=\"file\"\r\n\t\t\t\taccept=\"image/*\"\r\n\t\t\t\tonChange={onFileChange}\r\n\t\t\t\tstyle={{\r\n\t\t\t\topacity: 0,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{attachedFile && (\r\n\t\t\t\t<TweetAttachment>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\tsrc={attachedFile}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundImage: attachedFile,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<AttachmentRemoveBtn onClick={onClearAttachedFile}>\r\n\t\t\t\t\t\t<span>Remove</span>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\r\n\t\t\t\t\t</AttachmentRemoveBtn>\r\n\t\t\t\t</TweetAttachment>\r\n\t\t\t)}\r\n\t\t</TweetInputForm>\r\n\t)\r\n}\r\n\r\nexport default TweetForm;","import { collection, query, onSnapshot, orderBy } from \"firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetForm from \"components/TweetForm\";\r\n\r\nconst Home = ({ userObj }) => {\r\n\tconst [tweets, setTweets] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tconst q = query(collection(dbService, \"tweets\"), orderBy(\"createdAt\", \"desc\"));\r\n\t\t// when any changes on DB\r\n\t\tonSnapshot(q, (snapshot) => {\r\n\t\t\tconst tweetArray = snapshot.docs.map((doc) => ({\r\n\t\t\t\tid: doc.id,\r\n\t\t\t\t...doc.data(),\r\n\t\t\t}));\r\n\t\t\tsetTweets(tweetArray);\r\n\t\t});\r\n\t}, [])\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<TweetForm userObj={userObj} />\r\n\t\t\t<div style={{ marginTop: 30 }}>\r\n\t\t\t\t{tweets.map((tweet) => \r\n\t\t\t\t\t<Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid} />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Navbar = styled.ul`\r\n\tdisplay: flex; \r\n\tjustify-content: center; \r\n\tmargin-top: 50px;\r\n\tlist-style-type: none;\r\n`;\r\n\r\nconst TwitIcon = styled(Link)`\r\n\tmargin-right: 10px;\r\n`;\r\n\r\nconst ProfileIcon = styled(Link)`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tmargin-left: 10px;\r\n\tfont-size: 12px;\r\n\ttext-decoration: none;\r\n\t&:visited {\r\n\t\tcolor: #04AAFF;\r\n\t} \r\n`;\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n\t<Navbar>\r\n\t\t<li>\r\n\t\t\t<TwitIcon to=\"/\">\r\n\t\t\t\t<FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n\t\t\t</TwitIcon>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t<ProfileIcon to=\"/profile\">\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj?.displayName\r\n              ? `${userObj.displayName}` : \"User\"}`s Profile\r\n          </span>\r\n        </ProfileIcon>\r\n\t\t</li>\r\n\t</Navbar>\r\n</nav>;\r\n\r\nexport default Navigation;","import { updateProfile } from \"@firebase/auth\";\r\nimport { collection, getDocs, orderBy, query, where } from \"@firebase/firestore\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ProfileForm = styled.form`\r\n\tborder-bottom: 1px solid rgba(255, 255, 255, 0.9);\r\n\tpadding-bottom: 30px;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nconst ProfileNameInput = styled.input`\r\n\twidth: 100%;\r\n\tpadding: 10px 20px;\r\n\tborder-radius: 20px;\r\n\tborder: 1px solid black;\r\n\ttext-align: center;\r\n\tbackground-color: white;\r\n  \tcolor: black;\r\n`;\r\n\r\nconst ProfileUpdateBtn = styled.input`\r\n\tcursor: pointer;\r\n\twidth: 100%;\r\n\tpadding: 7px 20px;\r\n\ttext-align: center;\r\n\tcolor: white;\r\n\tborder-radius: 20px;\r\n\tbackground-color: #04aaff;\r\n\tmargin-top: 10px;\r\n`;\r\n\r\nconst LogOutBtn = styled.span`\r\n\tcursor: pointer;\r\n\twidth: 100%;\r\n\tpadding: 7px 20px;\r\n\ttext-align: center;\r\n\tcolor: white;\r\n\tborder-radius: 20px;\r\n  \tbackground-color: tomato;\r\n\tmargin-top: 50px;\r\n`;\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n\tconst [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\tconst history = useHistory();\r\n\tconst onLogOutClick = () => {\r\n\t\tauthService.signOut();\r\n\t\thistory.push(\"/\");\r\n\t};\r\n\tconst getMyTweets = async() => {\r\n\t\tconst q = query(collection(dbService, \"tweets\"), where(\"creatorId\", \"==\", userObj.uid), orderBy(\"createdAt\", \"desc\"));\r\n\t\tconst querySnapshot = await getDocs(q);\r\n\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\tconsole.log(doc.id, \"=>\", doc.data());\r\n\t\t})\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tgetMyTweets();\r\n\t}, []);\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst { target: { value }} = event;\r\n\t\tsetNewDisplayName(value);\r\n\t}\r\n\r\n\tconst onSubmit = async(event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif(userObj.displayName !== newDisplayName) {\r\n\t\t\tawait updateProfile(authService.currentUser, {\r\n\t\t\t\tdisplayName: newDisplayName,\r\n\t\t\t});\r\n\t\t}\r\n\t\trefreshUser();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<ProfileForm onSubmit={onSubmit}>\r\n\t\t\t\t<ProfileNameInput type=\"text\" placeholder=\"Display Name\" value={newDisplayName} onChange={onChange} autoFocus />\r\n\t\t\t\t<ProfileUpdateBtn type=\"submit\" value=\"Update Profile\" />\r\n\t\t\t</ProfileForm>\r\n\t\t\t<LogOutBtn onClick={onLogOutClick}>\r\n        \t\tLog Out\r\n      \t\t</LogOutBtn>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Profile;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t{isLoggedIn && <Navigation userObj={userObj} />}\r\n\t\t\t<Switch>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmaxWidth: 890,\r\n\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\tmargin: \"0 auto\",\r\n\t\t\t\t\t\t\tmarginTop: 80,\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\tjustifyContent: \"center\"\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<Home userObj={userObj} />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/profile\">\r\n\t\t\t\t\t\t\t<Profile userObj={userObj} refreshUser={refreshUser} />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<Auth />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default AppRouter;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\t* {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\tinput {\r\n\t\tall: unset;\r\n\t\tbox-sizing: border-box;\r\n\t\tappearance: none;\r\n\t}\r\n\r\n\tbody {\r\n\t\tbackground-color: black;\r\n\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n\t\t\tUbuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n\t\tfont-size: 14px;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tbackground-color: white;\r\n\t\tcolor: black;\r\n\t}\r\n\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: inherit;\r\n\t}\r\n\r\n\tform {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.container {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 320px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n`;\r\n\r\nexport default GlobalStyles;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { updateProfile } from \"@firebase/auth\";\nimport GlobalStyles from \"GlobalStyles\";\n\nfunction App() {\n\tconst [init, setInit] = useState(false);\n\tconst [userObj, setUserObj] = useState(null);\n\n\tuseEffect(() => {\n\t\tauthService.onAuthStateChanged((user) => {\n\t\t\tif(user) {\n\t\t\t\tif(user.displayName === null) {\n\t\t\t\t\tupdateProfile(user, {\n\t\t\t\t\t\tdisplayName: \"User\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsetUserObj({\n\t\t\t\t\tuid: user.uid,\n\t\t\t\t\tdisplayName: user.displayName\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetUserObj(null);\n\t\t\t}\n\t\t\tsetInit(true);\n\t\t}); \n\t}, []);\n\tconst refreshUser = () => {\n\t\tconst user = authService.currentUser;\n\t\tsetUserObj({\n\t\t\tuid: user.uid,\n\t\t\tdisplayName: user.displayName\n\t\t});\n\t}\n  \treturn (\n\t\t<>\n\t\t\t<GlobalStyles />\n\t  \t\t{init ? (\n\t\t\t  \t<AppRouter \n\t\t\t  \t\tisLoggedIn={Boolean(userObj)} \n\t\t\t\t\tuserObj={userObj} \n\t\t\t\t\trefreshUser={refreshUser} \n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t\"Initializing...\"\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}